events {}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;

        server_name www.website.com;

        root /usr/share/nginx/html;
        index index.html;

        # -------------------------------
        # Angular SPA
        # -------------------------------
        location / {
            try_files $uri $uri/ /index.html;
        }

        # -------------------------------
        # Auth Microservice (/tests/)
        # -------------------------------
        location /tests/ {
            proxy_pass http://auth-service:8089/tests/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # CORS
            add_header 'Access-Control-Allow-Origin' 'http://192.168.33.10:30080' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Preflight OPTIONS
            if ($request_method = OPTIONS) {
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }
        }

        # -------------------------------
        # Formation Microservice (/Formation-Service/)
        # -------------------------------
        location /Formation-Service/ {
            proxy_pass http://formation-service:9094/Formation-Service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # CORS
            add_header 'Access-Control-Allow-Origin' 'http://192.168.33.10:30080' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Preflight OPTIONS
            if ($request_method = OPTIONS) {
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }
        }
    }
}
